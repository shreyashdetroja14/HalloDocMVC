@using HalloDocServices.Constants;
@{
    ViewData["Title"] = "Admin Profile";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
}

@section AddStyles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
    <link href="@Url.Content("~/css/requestform.css")" rel="stylesheet" type="text/css" />
}

@model HalloDocServices.ViewModels.AdminViewModels.AdminProfileViewModel

<div class="main">

    @*<partial name="_NavbarLinks">*@

    <div class="container-xl p-4">
        <div class=" back p-0 pb-4 d-flex justify-content-between">
            @if(Model.IsEditAdmin == true)
            {
                <h2>Edit Admin</h2>
            }
            else
            {
                <h2>Profile</h2>
            }
            <button class="btn btn-outline-info d-flex align-items-center" onclick="window.history.back()">
                <span class="material-symbols-outlined text-info fs-6">
                    arrow_back_ios
                </span>
                <span>Back</span>
            </button>
        </div>

        <div class="rounded-3 custom-shadow bg-body" >
            <form id="form-account-info" class=" p-4 request-form rounded-3 rounded-top shadow-none">
                <input type="number" asp-for="AdminId" hidden>
                <input type="text" asp-for="AspNetUserId" hidden>
                <div class="info mb-4">
                    <h4 class="mb-3">Account Information</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="Username" class="form-control account-info" id="Username"
                                       placeholder="Username" disabled>
                                <label asp-for="Username">Username</label>
                                <span asp-validation-for="Username" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="password" asp-for="Password" class="form-control" id="Password"
                                       placeholder="Password">
                                <label asp-for="Password">Password</label>
                                <span class="material-symbols-outlined text-body icon-label" id="eye">
                                    visibility_off
                                </span>
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <select asp-for="Status" id="status-list" class="form-select p-3 account-info" asp-items="Html.GetEnumSelectList<Status>()" disabled>
                                    <option value="">Set a status</option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class=" mb-3">
                                <select asp-for="RoleId" id="role-list" class="form-select p-3 account-info" asp-items="@Model.RoleList" disabled>
                                    
                                </select>
                                <span asp-validation-for="RoleId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="submit d-flex justify-content-end">
                    <button type="button" id="reset-pass" class="btn btn-outline-info py-2 px-3 ms-3" >Reset Password</button>
                    @if(Model.IsEditAdmin == true)
                    {
                        <button type="button" id="account-info-edit" class="btn btn-outline-info py-2 px-3 ms-3">Edit</button>
                    }
                    <button type="button" id="account-info-save" class="btn btn-info text-white py-2 px-3 ms-3" >Save</button>
                    <input type="reset" value="Cancel" id="account-info-cancel" class="btn btn-outline-info py-2 px-3 ms-3" />

                </div>

            </form>

            <form asp-action="EditAdminInfo" class=" p-4 pt-0 request-form rounded-0 shadow-none">
                <input type="number" asp-for="AdminId" hidden>
                <input type="text" asp-for="AspNetUserId" hidden>
                <input type="text" asp-for="Username" id="Username2" hidden>
                <div class="info mb-4">
                    <h4 class="mb-3">Administrator Information</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="FirstName" class="form-control admin-info" id="FirstName"
                                       placeholder="FirstName" readonly>
                                <label asp-for="FirstName">First Name</label>
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="LastName" class="form-control admin-info" id="LastName"
                                       placeholder="LastName" readonly>
                                <label asp-for="LastName">Last Name</label>
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="email" asp-for="Email" class="form-control admin-info" id="Email" placeholder="Email" readonly>
                                <label asp-for="Email">Email</label>
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="email" asp-for="ConfirmEmail" class="form-control admin-info" id="ConfirmEmail" placeholder="ConfirmEmail" readonly>
                                <label asp-for="ConfirmEmail">ConfirmEmail</label>
                                <span asp-validation-for="ConfirmEmail" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6 pb-3">
                            <input type="tel" asp-for="PhoneNumber" class="form-control w-100 admin-info" id="PhoneNumber" readonly />
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>
                        <div class="col-sm-6 pb-3">
                            @foreach (var state in Model.StateList)
                            {
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input"
                                           type="checkbox"
                                           value="@state.Value"
                                           id="region-@state.Value"
                                           name="AdminRegions"
                                           checked="@(Model.AdminRegions.Contains(int.Parse(state.Value)) ? "true" : false)">
                                    <label class="form-check-label" for="region-@state.Value">
                                        @state.Text
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="submit d-flex justify-content-end">
                    <button type="button" class="btn btn-outline-info py-2 px-3 ms-3" id="admin-info-editbtn">Edit</button>
                    <input type="submit" value="Save" id="admin-info-save" class="btn btn-info py-2 px-3 ms-3 text-white d-none">
                    <input type="reset" value="Cancel" id="admin-info-cancel" class="btn cancelbtn btn-outline-danger py-2 px-3 ms-3 d-none">
                </div>

            </form>

            <form asp-action="EditBilling" class=" p-4 pt-0 request-form rounded-3 rounded-bottom shadow-none">
                <input type="number" asp-for="AdminId" hidden>
                <input type="text" asp-for="AspNetUserId" hidden>
                <div class="info mb-4">
                    <h4 class="mb-3">Mailing & Billing Information</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="Address1" class="form-control billing-info" id="Address1"
                                       placeholder="Address1" readonly>
                                <label asp-for="Address1">Address 1</label>
                                <span asp-validation-for="Address1" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="Address2" class="form-control billing-info" id="Address2"
                                       placeholder="Address2" readonly>
                                <label asp-for="Address2">Address 2</label>
                                <span asp-validation-for="Address2" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="City" class="form-control billing-info" id="City" placeholder="City" readonly>
                                <label asp-for="City">City</label>
                                <span asp-validation-for="City" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class=" mb-3">
                                <select asp-for="RegionId" id="region-list" class="form-select p-3" asp-items="@Model.StateList" disabled>
                                </select>
                                <span asp-validation-for="RegionId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="ZipCode" class="form-control billing-info" id="ZipCode" placeholder="ZipCode" readonly>
                                <label asp-for="ZipCode">ZipCode</label>
                                <span asp-validation-for="ZipCode" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6 pb-3">
                            <input type="tel" asp-for="SecondPhoneNumber" class="form-control w-100 billing-info" id="SecondPhoneNumber" readonly />
                            <span asp-validation-for="SecondPhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="submit d-flex justify-content-end">
                    <button type="button" id="billing-info-editbtn" class="btn btn-outline-info py-2 px-3 ms-3">Edit</button>
                    <input type="submit" value="Save" id="billing-info-save" class="btn btn-info py-2 px-3 ms-3 text-white d-none">
                    <input type="reset" value="Cancel" id="billing-info-cancel" class="btn cancelbtn btn-outline-danger py-2 px-3 ms-3 d-none">
                </div>

            </form>
        </div>
        

    </div>

</div>



@section AddScript{

    <partial name="_ToastMessageScriptsPartial" />

    <script>

        const phoneInputField = document.querySelector("#PhoneNumber");
        const phoneInput = window.intlTelInput(phoneInputField, {
            initialCountry: "in",
            preferredCountries: ["in"],
            onlyCountries: ["in", "us", "au", "de"],
            utilsScript:
                "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        });

        const phoneInputField2 = document.querySelector("#SecondPhoneNumber");
        const phoneInput2 = window.intlTelInput(phoneInputField2, {
            initialCountry: "in",
            preferredCountries: ["in"],
            onlyCountries: ["in", "us", "au", "de"],
            utilsScript:
                "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        });

    </script>
    <script>

        //ACCOUNT INFO EDIT

        $('#account-info-save').hide();
        $('#account-info-cancel').hide();

        $('#account-info-edit').click(function(){
            $('.account-info').each(function () {
                $(this).prop('disabled', false);
            })
            $('#account-info-save').show();
            $('#account-info-cancel').show();

            $(this).hide();
        });
        
        $('#account-info-cancel').click(function(){
            $('.account-info').each(function () {
                $(this).prop('disabled', true);
            })
            $('#account-info-edit').show();

            $('#account-info-save').hide();
            $(this).hide();
        });

        

        const resetPassBtn = $('#reset-pass');
        const accountInfoSubmitBtn = $('#account-info-save');

        //const isEditAdmin = '@Model.IsEditAdmin';
        //console.log('is edit admin: ', isEditAdmin);
        
        resetPassBtn.click(function(){
            console.log('reset btn clicked');
            

            if(window.location.href.toLowerCase().includes('access')){
                //console.log('status: ', isEditAdmin);
                $('#form-account-info').attr('action', '/Access/ResetPassword');
            }
            else{
                //console.log('status: ', isEditAdmin);
                $('#form-account-info').attr('action', '/Profile/ResetPassword');
            }

            console.log($('#form-account-info').attr('action'));
            $('#form-account-info').attr('method', 'post');
            $('#form-account-info').submit();
        });
        
        accountInfoSubmitBtn.click(function(){
            console.log('reset btn clicked');
            if (window.location.href.toLowerCase().includes('access')) {
                $('#form-account-info').attr('action', '/Access/EditAccountInfo');
            }
            else {
                $('#form-account-info').attr('action', '/Profile/EditAccountInfo');
            }
            $('#form-account-info').attr('method', 'post');
            $('#form-account-info').submit();
        });

        


        //ADMIN INFO EDIT

        const adminInfoEditBtn = document.querySelector('#admin-info-editbtn');
        const adminInfoSubmitBtn = document.querySelector('#admin-info-save');
        const adminInfoCancelBtn = document.querySelector('#admin-info-cancel');
        const adminInfoInputTags = document.querySelectorAll('.admin-info');
        const regionList = document.querySelector('#region-list');


        adminInfoEditBtn.addEventListener('click', () => {

            adminInfoEditBtn.classList.add('d-none');

            adminInfoSubmitBtn.classList.remove('d-none');
            adminInfoCancelBtn.classList.remove('d-none');

            adminInfoInputTags.forEach(input => {
                input.readOnly = false;
            });

            
        });

        adminInfoCancelBtn.addEventListener('click', () => {

            adminInfoSubmitBtn.classList.add('d-none');
            adminInfoCancelBtn.classList.add('d-none');

            adminInfoEditBtn.classList.remove('d-none');

            adminInfoInputTags.forEach(input => {
                input.readOnly = true;
            });


        });



        // BILLING INFO EDIT

        const billingInfoEditBtn = document.querySelector('#billing-info-editbtn');
        const billingInfoSubmitBtn = document.querySelector('#billing-info-save');
        const billingInfoCancelBtn = document.querySelector('#billing-info-cancel');
        const billingInfoInputTags = document.querySelectorAll('.billing-info');


        billingInfoEditBtn.addEventListener('click', () => {

            billingInfoEditBtn.classList.add('d-none');

            billingInfoSubmitBtn.classList.remove('d-none');
            billingInfoCancelBtn.classList.remove('d-none');

            billingInfoInputTags.forEach(input => {
                input.readOnly = false;
            });

            regionList.disabled = false;
        });

        billingInfoCancelBtn.addEventListener('click', () => {

            billingInfoSubmitBtn.classList.add('d-none');
            billingInfoCancelBtn.classList.add('d-none');

            billingInfoEditBtn.classList.remove('d-none');

            billingInfoInputTags.forEach(input => {
                input.readOnly = true;

            });

            regionList.disabled = true;
        });

    </script>


    @*PASSWORD SHOW/HIDE*@

    <script>
        $('#eye').click(function () {
            var passwordInput = $('#Password');
            var eyeIcon = $('#eye');

            if (passwordInput.attr('type') === "password") {
                passwordInput.attr('type', 'text');
                eyeIcon.text('visibility');
            } else {
                passwordInput.attr('type', 'password');
                eyeIcon.text('visibility_off');
            }
        })
    </script>

    @*GENERATE USERNAME*@
    <script>
        const userNameInput = document.querySelector('#Username');
        const userNameInput2 = document.querySelector('#Username2');
        const firstNameInput = document.querySelector('#FirstName');
        const lastNameInput = document.querySelector('#LastName');

        function getAvailableUsername(username) {

            $.ajax({
                url: '/Login/CheckUsername',
                data: {
                    username: username,
                },
                type: 'GET',
                success: function (data) {
                    console.log(data);
                    userNameInput.value = data;
                    userNameInput2.value = data;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error("Error fetching data:", textStatus);
                    if (errorThrown) {
                        console.error("Specific error:", errorThrown);
                    }
                    console.error("HTTP status code:", jqXHR.status);
                }
            })
        }

        function generateUsername() {

            const firstName = firstNameInput.value.trim().toUpperCase();
            const lastName = lastNameInput.value.trim().toUpperCase();

            console.log(firstName);
            console.log(lastName);

            if (firstName == '') {

                firstNameInput.value = firstName;
                return;
            }

            if (lastName == '') {
                lastNameInput.value = lastName;
                return;
            }

            let firstNamePart = firstName.substring(0, 1);
            let lastNamePart = lastName.substring(0, 3);


            if (lastName.length < 3) {
                lastNamePart = lastName;
            }

            const username = `ADMIN.${lastNamePart}.${firstNamePart}`;

            getAvailableUsername(username);


        }

        firstNameInput.addEventListener('change', generateUsername);
        lastNameInput.addEventListener('change', generateUsername);

    </script>
}