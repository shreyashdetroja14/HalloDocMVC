@using HalloDocServices.Constants;

@{
    ViewData["Title"] = "Edit Provider";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
}

@section AddStyles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
    <link href="@Url.Content("~/css/requestform.css")" rel="stylesheet" type="text/css" />
    <style>
        

    </style>
}

@model HalloDocServices.ViewModels.AdminViewModels.EditProviderViewModel

<div class="main">

    @*<partial name="_NavbarLinks">*@

    <div class="container-xl p-4">
        <div class=" back p-0 pb-4 d-flex justify-content-between">
            <h2>Edit Physician</h2>
            <button class="btn btn-outline-info d-flex align-items-center" onclick="window.history.back()">
                <span class="material-symbols-outlined text-info fs-6">
                    arrow_back_ios
                </span>
                <span>Back</span>
            </button>
        </div>

        <div class=" rounded-3 custom-shadow">
            <form id="form-account-info" class="bg-body p-4  rounded-top shadow-none">
                <input type="number" asp-for="ProviderId" hidden>
                <div class="info mb-4">
                    <h4 class="mb-3">Account Information</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="Username" class="form-control account-info" id="Username"
                                       placeholder="Username" readonly>
                                <label asp-for="Username">Username</label>
                                <span asp-validation-for="Username" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="password" asp-for="Password" class="form-control" id="Password"
                                       placeholder="Password">
                                <label asp-for="Password">Password</label>
                                <span class="material-symbols-outlined text-body icon-label" id="eye">
                                    visibility_off
                                </span>
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <select asp-for="Status" id="status-list" class="form-select p-3 account-info" asp-items="Html.GetEnumSelectList<Status>()" disabled>
                                    <option value="">Set a status</option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class=" mb-3">
                                <select asp-for="RoleId" id="role-list" class="form-select p-3 account-info" asp-items="@Model.RoleList" disabled>
                                </select>
                                <span asp-validation-for="RoleId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="submit d-flex justify-content-end">
                    <button type="button" id="reset-pass" class="btn btn-outline-info py-2 px-3 ms-3">Reset Password</button>
                    <button type="button" id="account-info-editbtn" class="btn btn-outline-info py-2 px-3 ms-3">Edit</button>
                    <button type="button" id="account-info-save" class="btn btn-info py-2 px-3 ms-3 text-white d-none">Save</button>
                    <input type="reset" value="Cancel" id="account-info-cancel" class="btn cancelbtn btn-outline-danger py-2 px-3 ms-3 d-none" />
                </div>
            </form>

            <form asp-action="EditPhysicianInfo" class="bg-body p-4 pt-0  rounded-0 shadow-none">
                <input type="number" asp-for="ProviderId" hidden>
                <input type="text" asp-for="Username" id="Username2" hidden>
                <div class="info mb-4">
                    <h4 class="mb-3">Physician Information</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="FirstName" class="form-control physician-info" id="FirstName"
                                       placeholder="FirstName" readonly>
                                <label asp-for="FirstName">First Name</label>
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="LastName" class="form-control physician-info" id="LastName"
                                       placeholder="LastName" readonly>
                                <label asp-for="LastName">Last Name</label>
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="email" asp-for="Email" class="form-control physician-info" id="Email" placeholder="Email" readonly>
                                <label asp-for="Email">Email</label>
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6 pb-3">
                            <input type="tel" asp-for="PhoneNumber" class="form-control w-100 physician-info" id="PhoneNumber" readonly />
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="MedicalLicense" class="form-control physician-info" id="MedicalLicense" placeholder="MedicalLicense" readonly>
                                <label asp-for="MedicalLicense">Medical License</label>
                                <span asp-validation-for="MedicalLicense" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="NPINumber" class="form-control physician-info" id="NPINumber" placeholder="NPINumber" readonly>
                                <label asp-for="NPINumber">NPI Number</label>
                                <span asp-validation-for="NPINumber" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="email" asp-for="SyncEmail" class="form-control physician-info" id="SyncEmail" placeholder="SyncEmail" readonly>
                                <label asp-for="SyncEmail">Sync Email</label>
                                <span asp-validation-for="SyncEmail" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-sm-6 pb-3">
                            @foreach (var state in Model.StateList)
                            {
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input physician-info-checkbox"
                                           type="checkbox"
                                           value="@state.Value"
                                           id="region-@state.Value"
                                           name="ProviderRegions"
                                           checked="@(Model.ProviderRegions.Contains(int.Parse(state.Value)) ? "true" : false)"
                                           disabled>
                                    <label class="form-check-label" for="region-@state.Value">
                                        @state.Text
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="submit d-flex justify-content-end">
                    @if (!Model.IsAccessProvider)
                    {
                        <a asp-action="Payrate" asp-route-providerId="@Model.ProviderId" class="btn btn-info text-white">Enter Payrate</a>
                    }
                    <button type="button" class="btn btn-outline-info py-2 px-3 ms-3" id="physician-info-editbtn">Edit</button>
                    <input type="submit" value="Save" id="physician-info-save" class="btn btn-info py-2 px-3 ms-3 text-white d-none">
                    <input type="reset" value="Cancel" id="physician-info-cancel" class="btn cancelbtn btn-outline-danger py-2 px-3 ms-3 d-none">
                </div>

            </form>

            <form asp-action="EditBillingInfo" class="bg-body p-4 pt-0  rounded-0 shadow-none">
                <input type="number" asp-for="ProviderId" hidden>
                <div class="info mb-4">
                    <h4 class="mb-3">Mailing & Billing Information</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="Address1" class="form-control billing-info" id="Address1"
                                       placeholder="Address1" readonly>
                                <label asp-for="Address1">Address 1</label>
                                <span asp-validation-for="Address1" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="Address2" class="form-control billing-info" id="Address2"
                                       placeholder="Address2" readonly>
                                <label asp-for="Address2">Address 2</label>
                                <span asp-validation-for="Address2" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="City" class="form-control billing-info" id="City" placeholder="City" readonly>
                                <label asp-for="City">City</label>
                                <span asp-validation-for="City" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class=" mb-3">
                                <select asp-for="RegionId" id="region-list" class="form-select p-3" asp-items="@Model.StateList" disabled>
                                </select>
                                <span asp-validation-for="RegionId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="ZipCode" class="form-control billing-info" id="ZipCode" placeholder="ZipCode" readonly>
                                <label asp-for="ZipCode">ZipCode</label>
                                <span asp-validation-for="ZipCode" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6 pb-3">
                            <input type="tel" asp-for="SecondPhoneNumber" class="form-control w-100 billing-info" id="SecondPhoneNumber" readonly />
                            <span asp-validation-for="SecondPhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="submit d-flex justify-content-end">
                    <button type="button" id="billing-info-editbtn" class="btn btn-outline-info py-2 px-3 ms-3">Edit</button>
                    <input type="submit" value="Save" id="billing-info-save" class="btn btn-info py-2 px-3 ms-3 text-white d-none">
                    <input type="reset" value="Cancel" id="billing-info-cancel" class="btn cancelbtn btn-outline-danger py-2 px-3 ms-3 d-none">
                </div>

            </form>

            <form asp-action="EditProfileInfo" class="bg-body p-4 pt-0  rounded-0 shadow-none" enctype="multipart/form-data">
                <input type="number" asp-for="ProviderId" hidden>
                <div class="info mb-4">
                    <h4 class="mb-3">Provider Profile</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="BusinessName" class="form-control profile-info" id="BusinessName"
                                       placeholder="BusinessName" readonly>
                                <label asp-for="BusinessName">Business Name</label>
                                <span asp-validation-for="BusinessName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-floating mb-3">
                                <input type="text" asp-for="BusinessWebsite" class="form-control profile-info" id="BusinessWebsite"
                                       placeholder="BusinessWebsite" readonly>
                                <label asp-for="BusinessWebsite">Business Website</label>
                                <span asp-validation-for="BusinessWebsite" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="input-group mb-3">
                                <input type="file" accept=".jpg,.jpeg,.png" asp-for="Photo" class="form-control px-3 py-2 file-upload profile-info-upload" id="Photo" disabled>

                                <label class="input-group-text w-100 d-flex justify-content-between p-0 rounded-3 upload-label bg-body"
                                       asp-for="Photo">
                                    <span class="px-3 py-2" id="photoSpan">Select File</span>
                                    <div class="btn btn-info p-3 text-white fw-bold ">
                                        <img src="/images/uploadIcon.svg" class="me-2" alt="">Upload
                                    </div>
                                </label>
                            </div>
                            <div class="d-flex justify-content-center">
                                @if (Model.PhotoPath != "")
                                {
                                    <img src="@Model.PhotoPath" class="border mb-3" style="width: 150px; height: 150px;" />
                                }
                                else
                                {
                                    <img src="~/images/doctor-profile.jpg" class="border mb-3" style="width: 150px; height: 150px;" />
                                }
                            </div>
                        </div>
                        <div class="col-sm-6">

                            <div class="input-group mb-3">
                                <input type="file" accept=".jpg,.jpeg,.png" asp-for="Signature" class="form-control px-3 py-2 file-upload profile-info-upload" id="Signature" disabled>

                                <label class="input-group-text w-100 d-flex justify-content-between p-0 rounded-3 upload-label bg-body"
                                       asp-for="Signature">
                                    <span class="px-3 py-2" id="signatureSpan">Select File</span>
                                    <div class="btn btn-info p-3 text-white fw-bold ">
                                        <img src="/images/uploadIcon.svg" class="me-2" alt="">Upload
                                    </div>
                                </label>

                            </div>
                            <button type="button" class="btn btn-outline-info p-3 rounded-2 d-none" id="create-sign">Create signature</button>

                            <div class="w-100 d-flex justify-content-evenly flex-column align-items-center flex-lg-row align-items-lg-start my-3">
                                @if (Model.SignaturePath != null)
                                {
                                    <img src="@Model.SignaturePath" class="border mb-3 mb-lg-0 bg-white" style="width: 150px; height: 150px;" />
                                }
                                <div class="signature-container d-flex flex-column align-items-center d-none">
                                    <canvas id="signature-pad" class="border border-dark mb-3 bg-white" width="150" height="150"></canvas>
                                    <div>
                                        <button type="button" id="clear-button" class="btn btn-outline-info">Clear</button>
                                        <button type="button" id="save-button" class="btn btn-info text-white">Save</button>
                                    </div>
                                </div>

                            </div>

                        </div>
                        <div class="col-12">
                            <div class="form-floating mb-3">
                                <textarea asp-for="AdminNotes" class="form-control profile-info" placeholder="Enter Symptoms" id="AdminNotes"
                                          style="height: 150px" readonly></textarea>
                                <label asp-for="AdminNotes">Admin Notes</label>
                                <span asp-validation-for="AdminNotes" class="text-danger"></span>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="submit d-flex justify-content-end">
                    <button type="button" id="profile-info-editbtn" class="btn btn-outline-info py-2 px-3 ms-3">Edit</button>
                    <input type="submit" value="Save" id="profile-info-save" class="btn btn-info py-2 px-3 ms-3 text-white d-none">
                    <input type="reset" value="Cancel" id="profile-info-cancel" class="btn cancelbtn btn-outline-danger py-2 px-3 ms-3 d-none">
                </div>

            </form>

            <div class="p-4 pt-0 bg-body rounded-bottom">
                <h4 class="mb-3">Onboarding</h4>
                <form asp-action="Onboarding" enctype="multipart/form-data" asp-route-providerId="@Model.ProviderId" class="rounded-0 shadow-none mb-3">
                    <input type="number" value="1" name="docId" hidden />
                    <div class="row">
                        <div class="col-md-9 col-lg-8">
                            <div class="row">
                                <div class="col-1 mb-3">
                                    <input type="checkbox" class="form-check-input" id="ContractorDoc" checked="@Model.IsContractorDoc" disabled/>
                                </div>
                                <div class="col-11 col-sm-6 mb-3">
                                    <label for="ContractorDoc" class="me-2">Independent Contractor Agreement</label>
                                </div>
                                <div class="col-sm-5 mb-3">
                                    @*<input type="submit" value="Upload" class="btn btn-info text-white me-2" />*@
                                    <input type="file" accept=".jpg" class="onboarding-doc" name="UploadDoc" id="ContractorInput">
                                    <label for="ContractorInput" class="btn btn-info text-white me-2">Upload</label>
                                    @if (Model.IsContractorDoc)
                                    {
                                        <a target="_blank" href="~/Upload/Physician/@(Model.ProviderId)/1.jpg" class="btn btn-info text-white">View</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
                <form asp-action="Onboarding" enctype="multipart/form-data" asp-route-providerId="@Model.ProviderId" class="rounded-0 shadow-none mb-3">
                    <input type="number" value="2" name="docId" hidden />
                    <div class="row">
                        <div class="col-md-9 col-lg-8">
                            <div class="row">
                                <div class="col-1 mb-3">
                                    <input type="checkbox" class="form-check-input" id="BackgroundDoc" checked="@Model.IsBackgroundDoc" disabled />
                                </div>
                                <div class="col-11 col-sm-6 mb-3">
                                    <label for="BackgroundDoc" class="me-2">Background Check</label>
                                </div>
                                <div class="col-sm-5 mb-3">
                                    <input type="file" accept=".jpg" class="onboarding-doc" name="UploadDoc" id="BackgroundInput">
                                    <label for="BackgroundInput" class="btn btn-info text-white me-2">Upload</label>
                                    @if (Model.IsBackgroundDoc)
                                    {
                                        <a target="_blank" href="~/Upload/Physician/@(Model.ProviderId)/2.jpg" class="btn btn-info text-white">View</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
                <form asp-action="Onboarding" enctype="multipart/form-data" asp-route-providerId="@Model.ProviderId" class="rounded-0 shadow-none mb-3">
                    <input type="number" value="3" name="docId" hidden />
                    <div class="row">
                        <div class="col-md-9 col-lg-8">
                            <div class="row">
                                <div class="col-1 mb-3">
                                    <input type="checkbox" class="form-check-input me-2" id="HippaDoc" checked="@Model.IsHippaDoc" disabled />
                                </div>
                                <div class="col-11 col-sm-6 mb-3">
                                    <label for="HippaDoc" class="me-2">HIPAA Compliance</label>
                                </div>
                                <div class="col-sm-5 mb-3">
                                    <input type="file" accept=".jpg" class="onboarding-doc" name="UploadDoc" id="HippaInput">
                                    <label for="HippaInput" class="btn btn-info text-white me-2">Upload</label>
                                    @if (Model.IsHippaDoc)
                                    {
                                        <a target="_blank" href="~/Upload/Physician/@(Model.ProviderId)/3.jpg" class="btn btn-info text-white">View</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
                <form asp-action="Onboarding" enctype="multipart/form-data" asp-route-providerId="@Model.ProviderId" class="rounded-0 shadow-none mb-3">
                    <input type="number" value="4" name="docId" hidden />
                    <div class="row">
                        <div class="col-md-9 col-lg-8">
                            <div class="row">
                                <div class="col-1 mb-3">
                                    <input type="checkbox" class="form-check-input me-2" id="NonDisclosureDoc" checked="@Model.IsNonDisclosureDoc" disabled />
                                </div>
                                <div class="col-11 col-sm-6 mb-3">
                                    <label for="NonDisclosureDoc" class="me-2">Non-Disclosure Agreement</label>
                                </div>
                                <div class="col-sm-5 mb-3">
                                    <input type="file" accept=".jpg" class="onboarding-doc" name="UploadDoc" id="NonDisclosureInput">
                                    <label for="NonDisclosureInput" class="btn btn-info text-white me-2">Upload</label>
                                    @if (Model.IsNonDisclosureDoc)
                                    {
                                        <a target="_blank" href="~/Upload/Physician/@(Model.ProviderId)/4.jpg" class="btn btn-info text-white">View</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
                <form asp-action="Onboarding" enctype="multipart/form-data" asp-route-providerId="@Model.ProviderId" class="rounded-0 shadow-none mb-3 border-bottom">
                    <input type="number" value="5" name="docId" hidden />
                    <div class="row">
                        <div class="col-md-9 col-lg-8">
                            <div class="row">
                                <div class="col-1 mb-3">
                                    <input type="checkbox" class="form-check-input me-2" id="LicenseDoc" checked="@Model.IsLicenseDoc" disabled />
                                </div>
                                <div class="col-11 col-sm-6 mb-3">
                                    <label for="LicenseDoc" class="me-2">License Document</label>
                                </div>
                                <div class="col-sm-5 mb-3">
                                    <input type="file" accept=".jpg" class="onboarding-doc" name="UploadDoc" id="LicenseInput">
                                    <label for="LicenseInput" class="btn btn-info text-white me-2">Upload</label>
                                    @if (Model.IsLicenseDoc)
                                    {
                                        <a target="_blank" href="~/Upload/Physician/@(Model.ProviderId)/5.jpg" class="btn btn-info text-white">View</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </form>

                <div class="d-flex justify-content-end">
                    <a asp-action="DeleteProvider" asp-route-providerId="@Model.ProviderId" class="btn btn-danger">Delete Provider</a>
                </div>
            </div>
        </div>


    </div>

</div>



@section AddScript {

    <partial name="_ToastMessageScriptsPartial" />

    @*CANVAS SCRIPT*@

    <script>
        // Get the canvas element and clear and save buttons
        const canvas = document.getElementById("signature-pad");
        const clearButton = document.getElementById("clear-button");
        const saveButton = document.getElementById("save-button");
        const ctx = canvas.getContext("2d");
        let drawing = false;
        let prevX = 0;
        let prevY = 0;

        saveButton.disabled = true;

        // Event listeners for drawing
        canvas.addEventListener("mousedown", (e) => {
            drawing = true;
            prevX = e.clientX - canvas.getBoundingClientRect().left;
            prevY = e.clientY - canvas.getBoundingClientRect().top;
        });
        canvas.addEventListener("mousemove", (e) => {
            if (!drawing) return;
            draw(e.clientX - canvas.getBoundingClientRect().left, e.clientY - canvas.getBoundingClientRect().top);

            saveButton.disabled = false;
        });
        canvas.addEventListener("mouseup", () => {
            drawing = false;
        });
        canvas.addEventListener("mouseleave", () => {
            drawing = false;
        });
        // Function to draw on the canvas
        function draw(x, y) {
            ctx.beginPath();
            ctx.strokeStyle = "#000";
            ctx.lineWidth = 2;
            ctx.lineJoin = "round";
            ctx.moveTo(prevX, prevY);
            ctx.lineTo(x, y);
            ctx.closePath();
            ctx.stroke();
            prevX = x;
            prevY = y;
        }
        // Event listener for the clear button
        clearButton.addEventListener("click", () => {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            saveButton.disabled = false;
            signatureInput.value = "";
            saveButton.disabled = true;

            var event = new Event('change');
            signatureInput.dispatchEvent(event);
        });
        // Event listener for the save button
        saveButton.addEventListener("click", async () => {
            const dataURL = canvas.toDataURL("image/png");
            console.log(dataURL);
            const data = await fetch(dataURL);
            const blob = await data.blob();
            console.log('blob: ', blob);

            const file = new File([blob], "signature.png", { type: "image/png" });
            const container = new DataTransfer();
            container.items.add(file);

            signatureInput.files = container.files;

            var event = new Event('change');
            signatureInput.dispatchEvent(event);

            saveButton.disabled = true;
        });
    </script>

    
    @*PHONE NUMBER INPUT SCRIPT*@

    <script>

        const phoneInputField = document.querySelector("#PhoneNumber");
        const phoneInput = window.intlTelInput(phoneInputField, {
            initialCountry: "in",
            preferredCountries: ["in"],
            onlyCountries: ["in", "us", "au", "de"],
            utilsScript:
                "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        });

        const phoneInputField2 = document.querySelector("#SecondPhoneNumber");
        const phoneInput2 = window.intlTelInput(phoneInputField2, {
            initialCountry: "in",
            preferredCountries: ["in"],
            onlyCountries: ["in", "us", "au", "de"],
            utilsScript:
                "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        });

    </script>

    @*PASSWORD SHOW/HIDE*@

    <script>
        $('#eye').click(function () {
            var passwordInput = $('#Password');
            var eyeIcon = $('#eye');

            if (passwordInput.attr('type') === "password") {
                passwordInput.attr('type', 'text');
                eyeIcon.text('visibility');
            } else {
                passwordInput.attr('type', 'password');
                eyeIcon.text('visibility_off');
            }
        })
    </script>

    @*EDIT BUTTONS SCRIPT*@

    <script>

        const accountInfoEditBtn = document.querySelector('#account-info-editbtn');
        const accountInfoSubmitBtn = document.querySelector('#account-info-save');
        const accountInfoCancelBtn = document.querySelector('#account-info-cancel');
        const accountInfoInputTags = document.querySelectorAll('.account-info');
        const usernameInput = document.querySelector('#Username');
        const passwordInput = document.querySelector('#Password');
        const roleList = document.querySelector('#role-list');
        const statusList = document.querySelector('#status-list');

        const resetPassBtn = $('#reset-pass');
        

        resetPassBtn.click(function () {
            console.log('reset btn clicked');
            if (window.location.href.toLowerCase().includes('/access')) {
                $('#form-account-info').attr('action', '/Access/ResetProviderPassword');
           }
           else{
                $('#form-account-info').attr('action', '/Providers/ResetPassword');
           }
            $('#form-account-info').attr('method', 'post');
            $('#form-account-info').submit();
        });

        $('#account-info-save').click(function () {
            console.log('reset btn clicked');
            if (window.location.href.toLowerCase().includes('/access')) {
                $('#form-account-info').attr('action', '/Access/EditProviderAccountInfo');
            }
            else {
                $('#form-account-info').attr('action', '/Providers/EditAccountInfo');
            }
            $('#form-account-info').attr('method', 'post');
            $('#form-account-info').submit();
        });


        accountInfoEditBtn.addEventListener('click', () => {

            accountInfoEditBtn.classList.add('d-none');

            accountInfoSubmitBtn.classList.remove('d-none');
            accountInfoCancelBtn.classList.remove('d-none');

            accountInfoInputTags.forEach(input => {
                input.readOnly = false;
            });

            roleList.disabled = false;
            statusList.disabled = false;

            usernameInput.readOnly = true;
        });

        accountInfoCancelBtn.addEventListener('click', () => {

            accountInfoSubmitBtn.classList.add('d-none');
            accountInfoCancelBtn.classList.add('d-none');

            accountInfoEditBtn.classList.remove('d-none');

            accountInfoInputTags.forEach(input => {
                input.readOnly = true;
            });

            roleList.disabled = true;
            statusList.disabled = true;
        });



        const physicianInfoEditBtn = document.querySelector('#physician-info-editbtn');
        const physicianInfoSubmitBtn = document.querySelector('#physician-info-save');
        const physicianInfoCancelBtn = document.querySelector('#physician-info-cancel');
        const physicianInfoInputTags = document.querySelectorAll('.physician-info');
        const physicianInfoCheckboxes = document.querySelectorAll('.physician-info-checkbox');


        physicianInfoEditBtn.addEventListener('click', () => {

            physicianInfoEditBtn.classList.add('d-none');

            physicianInfoSubmitBtn.classList.remove('d-none');
            physicianInfoCancelBtn.classList.remove('d-none');

            physicianInfoInputTags.forEach(input => {
                input.readOnly = false;
            });

            physicianInfoCheckboxes.forEach(checkbox => {
                checkbox.disabled = false;
            });

        });

        physicianInfoCancelBtn.addEventListener('click', () => {

            physicianInfoSubmitBtn.classList.add('d-none');
            physicianInfoCancelBtn.classList.add('d-none');

            physicianInfoEditBtn.classList.remove('d-none');

            physicianInfoInputTags.forEach(input => {
                input.readOnly = true;
            });

            physicianInfoCheckboxes.forEach(checkbox => {
                checkbox.disabled = true;
            })
        });


        const billingInfoEditBtn = document.querySelector('#billing-info-editbtn');
        const billingInfoSubmitBtn = document.querySelector('#billing-info-save');
        const billingInfoCancelBtn = document.querySelector('#billing-info-cancel');
        const billingInfoInputTags = document.querySelectorAll('.billing-info');
        const regionList = document.querySelector('#region-list');


        billingInfoEditBtn.addEventListener('click', () => {

            billingInfoEditBtn.classList.add('d-none');

            billingInfoSubmitBtn.classList.remove('d-none');
            billingInfoCancelBtn.classList.remove('d-none');

            billingInfoInputTags.forEach(input => {
                input.readOnly = false;
            });

            regionList.disabled = false;
        });

        billingInfoCancelBtn.addEventListener('click', () => {

            billingInfoSubmitBtn.classList.add('d-none');
            billingInfoCancelBtn.classList.add('d-none');

            billingInfoEditBtn.classList.remove('d-none');

            billingInfoInputTags.forEach(input => {
                input.readOnly = true;
            });

            regionList.disabled = true;
        });


        const profileInfoEditBtn = document.querySelector('#profile-info-editbtn');
        const profileInfoSubmitBtn = document.querySelector('#profile-info-save');
        const profileInfoCancelBtn = document.querySelector('#profile-info-cancel');
        const profileInfoInputTags = document.querySelectorAll('.profile-info');
        const profileInfoUploads = document.querySelectorAll('.profile-info-upload');
        const profileInfoUploadLables = document.querySelectorAll('.upload-label');
        const createSignatureBtn = document.querySelector('#create-sign');
        const signContainer = document.querySelector('.signature-container');


        profileInfoEditBtn.addEventListener('click', () => {

            profileInfoEditBtn.classList.add('d-none');

            profileInfoSubmitBtn.classList.remove('d-none');
            profileInfoCancelBtn.classList.remove('d-none');

            profileInfoInputTags.forEach(input => {
                input.readOnly = false;
            });

            profileInfoUploads.forEach(input => {
                input.disabled = false;
            });

            profileInfoUploadLables.forEach(label => {
                label.classList.add('bg-white');
            });

            createSignatureBtn.classList.remove('d-none');
        });

        profileInfoCancelBtn.addEventListener('click', () => {

            profileInfoSubmitBtn.classList.add('d-none');
            profileInfoCancelBtn.classList.add('d-none');

            profileInfoEditBtn.classList.remove('d-none');

            profileInfoInputTags.forEach(input => {
                input.readOnly = true;
            });

            profileInfoUploads.forEach(input => {
                input.disabled = true;
            });

            profileInfoUploadLables.forEach(label => {
                label.classList.remove('bg-white');
            });

            createSignatureBtn.classList.add('d-none');
            signContainer.classList.add('d-none');

        });

        createSignatureBtn.addEventListener('click', () => {
            signContainer.classList.remove('d-none');
            createSignatureBtn.classList.add('d-none');
        })


    </script>

    <script>
        $('#BusinessName').change(function () {
            let firstname = $('#BusinessName').val();
            let trimmedValue = firstname.trim();
            $('#BusinessName').val(trimmedValue);
        });

        $('#City').change(function () {
            let city = $('#City').val();
            let trimmedValue = city.trim();
            $('#City').val(trimmedValue);
        });

    </script>

    @*UPLOAD LABEL SCRIPT*@

    <script>
        const photoInput = document.getElementById('Photo');
        const signatureInput = document.getElementById('Signature');
        const photoSpan = document.getElementById('photoSpan');
        const signatureSpan = document.getElementById('signatureSpan');

        photoInput.addEventListener('change', (event) => {
            const photoFile = event.target.files[0];
            if (photoFile) {
                photoSpan.textContent = photoFile.name;
            } else {
                photoSpan.textContent = "Select File"; 
            }
        });

        signatureInput.addEventListener('change', (event) => {
            const signatureFile = event.target.files[0];
            if (signatureFile) {
                signatureSpan.textContent = signatureFile.name;
            } else {
                signatureSpan.textContent = "Select File"; 
            }
        });
    </script>


    @*ONBOARDING DOCS INPUT SCRIPT*@

    <script>
        const docInputs = document.querySelectorAll('.onboarding-doc');

        docInputs.forEach(input => {
            input.addEventListener('change', () => {
                if(input.files.length !== 0){
                    const form = input.closest('form');
                    form.submit();
                }
            })
        })
    </script>

    @*GENERATE USERNAME*@
    <script>
        const userNameInput = document.querySelector('#Username');
        const userNameInput2 = document.querySelector('#Username2');
        const firstNameInput = document.querySelector('#FirstName');
        const lastNameInput = document.querySelector('#LastName');

        function getAvailableUsername(username) {

            $.ajax({
                url: '/Login/CheckUsername',
                data: {
                    username: username,
                },
                type: 'GET',
                success: function (data) {
                    console.log(data);
                    userNameInput.value = data;
                    userNameInput2.value = data;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error("Error fetching data:", textStatus);
                    if (errorThrown) {
                        console.error("Specific error:", errorThrown);
                    }
                    console.error("HTTP status code:", jqXHR.status);

                    if (jqXHR.responseJSON.status == 414) {
                        window.location.href = '/Login';
                    }
                }
            })
        }

        function generateUsername() {

            const firstName = firstNameInput.value.trim().toUpperCase();
            const lastName = lastNameInput.value.trim().toUpperCase();

            console.log(firstName);
            console.log(lastName);

            if (firstName == '') {

                firstNameInput.value = firstName;
                return;
            }

            if (lastName == '') {
                lastNameInput.value = lastName;
                return;
            }

            let firstNamePart = firstName.substring(0, 1);
            let lastNamePart = lastName.substring(0, 3);


            if (lastName.length < 3) {
                lastNamePart = lastName;
            }

            const username = `MD.${lastNamePart}.${firstNamePart}`;

            getAvailableUsername(username);


        }

        firstNameInput.addEventListener('change', generateUsername);
        lastNameInput.addEventListener('change', generateUsername);

    </script>
}

