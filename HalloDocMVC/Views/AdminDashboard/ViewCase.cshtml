
@{
    ViewData["Title"] = "ViewCase";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
}

@section AddStyles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
    <link href="@Url.Content("~/css/requestform.css")" rel="stylesheet" type="text/css" />
}

@model HalloDocServices.ViewModels.AdminViewModels.ViewCaseViewModel


<div class="main">
    
    @*<partial name="_NavbarLinks">*@
    <div class="container p-4">

        <div class=" back p-0 pb-4 d-flex justify-content-between">
            <div class="d-flex align-items-center">
                <h2>View Case</h2>
                <span class="ms-2 px-3 py-1 bg-success text-white rounded-pill">
                    @(Model.RequestType == 1 ? "Business" : "")
                    @(Model.RequestType == 2 ? "Patient" : "")
                    @(Model.RequestType == 3 ? "Family" : "")
                    @(Model.RequestType == 4 ? "Concierge" : "")
                </span>
            </div>
            <button class="btn btn-outline-info d-flex align-items-center" onclick="window.history.back()">
                <span class="material-symbols-outlined text-info fs-6">
                    arrow_back_ios
                </span>
                <span>Back</span>
            </button>
        </div>
        <form asp-action="ViewCase" class="bg-body p-4  request-form">
            <input type="number" asp-for="RequestId" hidden>
            <input type="number" asp-for="RequestType" hidden>
            <div class="info mb-4">
                <h2 class="mb-3">Patient Information</h2>
                <div>
                    <p class="text-secondary fs-6 m-0">Confirmation Number</p>
                    <p class="h4 text-info mb-4">@Model.ConfirmationNumber</p>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="form-floating mb-3">
                            <textarea asp-for="Symptoms" class="form-control" placeholder="Enter Symptoms" id="Symptoms"
                                      style="height: 100px" readonly></textarea>
                            <label asp-for="Symptoms">Patient Notes</label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-floating mb-3">
                            <input type="text" asp-for="FirstName" class="form-control" id="FirstName"
                                   placeholder="First Name" readonly>
                            <label asp-for="FirstName">First Name</label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-floating mb-3">
                            <input type="text" asp-for="LastName" class="form-control" id="LastName"
                                   placeholder="Last Name" readonly>
                            <label asp-for="LastName">Last Name</label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-floating mb-3">
                            <input type="date" asp-for="DOB" class="form-control" id="DOB" placeholder="DOB" readonly>
                            <label asp-for="DOB">Date Of Birth</label>
                        </div>
                    </div>
                    <div class="col-sm-6 pb-3">
                        <input type="tel" asp-for="PhoneNumber" class="form-control w-100" id="PhoneNumber" readonly />
                    </div>
                    <div class="col-sm-6">
                        <div class="form-floating mb-3">
                            <input type="email" asp-for="Email" class="form-control" id="Email"
                                   placeholder="abc@xyz.pqr" autocomplete="off" readonly>
                            <label asp-for="Email">Email</label>
                        </div>
                    </div>
                    @if(Model.Status != 1 && Model.IsPhysician != true)
                    {
                        <div class="col-sm-6">
                            <button type="button" class="btn btn-outline-info py-3 px-4" id="editbtn">Edit</button>
                            
                        </div>
                    }

                </div>
            </div>

            <div class="location-info mb-4">
                <h2 class="mb-3">Location Information</h2>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-floating mb-3">
                            <input type="text" asp-for="Region" class="form-control" id="Region"
                                   placeholder="State" readonly>
                            <label asp-for="Region">Region</label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-floating mb-3">
                            <input type="text" asp-for="BusinessNameOrAddress" class="form-control" id="BusinessNameOrAddress"
                                   placeholder="Address" readonly>
                            <label asp-for="BusinessNameOrAddress">Business Name/ Address</label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-floating mb-3">
                            <input type="text" asp-for="Room" class="form-control" id="Room"
                                   placeholder="Room" readonly>
                            <label asp-for="Room">Room #</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="submit mb-4 d-flex justify-content-end">
                @if(Model.Status == 1 && Model.IsPhysician != true)
                {
                    <button type="button" class="btn btn-info py-2 px-3 me-3 text-white assign-case-btn" data-request-id="@Model.RequestId">
                        Assign Case
                    </button>
                }

                <a asp-route="ViewNotes" asp-route-requestId="@Model.RequestId" class="btn btn-outline-info py-2 px-3">View Notes</a>
                <input type="submit" value="Update" class="btn btn-info py-2 px-3 ms-3 text-white d-none">
                <input type="reset" value="Cancel" class="btn cancelbtn btn-danger py-2 px-3 ms-3 d-none">

                
            </div>

        </form>
    </div>
</div>

<div id="modal-container">
</div>




@section AddScript{

    <partial name="_ToastMessageScriptsPartial" />


    <script>
        const phoneInputField = document.querySelector("#PhoneNumber");
        const phoneInput = window.intlTelInput(phoneInputField, {
            initialCountry: "in",
            preferredCountries: ["in"],
            onlyCountries: ["in", "us", "au", "de"],
            utilsScript:
                "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        });
    </script>
    <script>
        const editBtn = document.querySelector('#editbtn');
        const submitBtn = document.querySelector('input[type="submit"]');
        const cancelBtn = document.querySelector('input[type="reset"]');

        const emailInp = document.querySelector('input[type="email"]');
        const phoneInp = document.querySelector('input[type="tel"]');

        if(editBtn !== null){
            editBtn.addEventListener('click', () => {
                editBtn.classList.add('d-none');
                submitBtn.classList.remove('d-none');
                cancelBtn.classList.remove('d-none');

                emailInp.readOnly = false;
                phoneInp.readOnly = false;
            });
        }

        cancelBtn.addEventListener('click', () => {
            submitBtn.classList.add('d-none');
            cancelBtn.classList.add('d-none');
            editBtn.classList.remove('d-none');

            emailInp.readOnly = true;
            phoneInp.readOnly = true;
        })

        async function ValidateCookie() {
            try {
                //cookie validate url
                const validationurl = "/Login/ValidateCookie";

                const validateResponse = await fetch(validationurl);
                console.log(validateResponse);
                console.log(validateResponse.statusText, validateResponse.status);
                if (!validateResponse.ok) {
                    console.log('invalid cookiee');

                    //throw new Error(`Cookie invalid! `);

                    if (validateResponse.status === 401) {
                        console.log('Unauthorized access, redirecting to login');
                        window.location.reload();
                    } 
                    else {
                        throw new Error(`Something else! `);
                    }

                    return false;
                }

                return true;
            }
            catch (error) {
                console.error('HTTP VALIDATION error: ', error);
                return false;
            }
        }

        async function GetAssignCaseModalData(requestId, isTransferRequest = null) {

            try {

                const isCookieValid = await ValidateCookie();
                if (isCookieValid) {

                    let url = `/AdminDashBoard/AssignCase?requestId=${requestId}&isTransferRequest=${isTransferRequest}`;
                    const response = await fetch(url);

                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    const assignCaseModalHtml = await response.text();
                    const modalContainer = document.getElementById('modal-container');
                    modalContainer.innerHTML = assignCaseModalHtml;

                    const regionSelectList = document.querySelector('.region-select');
                    regionSelectList.addEventListener('change', async () => {
                        const regionId = regionSelectList.value;
                        try {
                            let url = `/AdminDashBoard/GetPhysicianSelectList?regionId=${regionId}`;
                            const response = await fetch(url);

                            if (!response.ok) {
                                throw new Error(`HTTP error! status: ${response.status}`);
                            }

                            const data = await response.json();

                            let options = '<option value="" selected>Select Physician</option>';
                            data.forEach(physician => {
                                options += `<option value="${physician.value}">${physician.text}</option>`;
                            });

                            console.log(options);

                            const physicianList = document.getElementById('assign-physician-list');
                            physicianList.innerHTML = options;
                        }
                        catch (error) {
                            console.error('Error fetching partial view:', error);
                        }

                    });

                    (function () {
                        'use strict'

                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        var forms = document.querySelectorAll('.needs-validation')

                        // Loop over them and prevent submission
                        Array.prototype.slice.call(forms)
                            .forEach(function (form) {
                                form.addEventListener('submit', function (event) {
                                    if (!form.checkValidity()) {
                                        event.preventDefault()
                                        event.stopPropagation()
                                    }

                                    form.classList.add('was-validated')
                                }, false)
                            })
                    })()

                    const myModal = new bootstrap.Modal('#assign-case-modal')
                    myModal.show();


                }


            }
            catch (error) {
                console.error('Error fetching partial view:', error);
            }
        }

        //async function GetAssignCaseModalData(requestId, regionId = 0) {

        //    try {
        //        const isCookieValid = await ValidateCookie();
        //        if (isCookieValid) {

        //            let url = `/AdminDashBoard/AssignCase?requestId=${requestId}&regionId=${regionId}`;

        //            const response = await fetch(url);

        //            if (!response.ok) {
        //                throw new Error(`HTTP error! status: ${response.status}`);
        //            }

        //            const assignCaseModalHtml = await response.text();
        //            const modalContainer = document.getElementById('modal-container');
        //            modalContainer.innerHTML = assignCaseModalHtml;

        //            const myModal = new bootstrap.Modal('#assign-case-modal')
        //            myModal.show();

        //            const regionSelectList = document.querySelector('.region-select');
        //            regionSelectList.addEventListener('change', async () => {
        //                const regionId = regionSelectList.value;
        //                console.log('region value:: ', regionId);

        //                myModal.hide();
        //                await GetAssignCaseModalData(requestId, regionId);
        //            });
        //        }
        //    } 
        //    catch (error) {
        //        console.error('Error fetching partial view:', error);
        //        // Handle the error gracefully, e.g., display an error message to the user
        //    }
        //}

        document.addEventListener('DOMContentLoaded', () => {
            const assignCaseBtn = document.querySelector('.assign-case-btn');

            if(assignCaseBtn !== null){
                assignCaseBtn.addEventListener('click', async (event) => {
                    const requestId = event.target.dataset.requestId;
                    console.log(requestId);

                    await GetAssignCaseModalData(requestId);
                });
            }
        })
    </script>
}